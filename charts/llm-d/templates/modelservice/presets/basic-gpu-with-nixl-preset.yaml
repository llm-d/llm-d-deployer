apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "modelservice.fullname" . }}-basic-gpu-with-nixl-preset
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: modelservice
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.modelservice.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.modelservice.annotations "context" $) | nindent 4 }}
    {{- end }}
data:
  decodeDeployment: |
    apiVersion: apps/v1
    kind: Deployment
    spec:
      template:
        spec:
          {{- if .Values.modelservice.decode.tolerations }}
          tolerations:
            {{- toYaml .Values.modelservice.decode.tolerations | nindent 12 }}
          {{- end }}
          initContainers:
            - name: routing-proxy
              image: {{ include "modelservice.routingProxyImage" . }}
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
              args:
                - "--port=8000"
                - "--vllm-port=8001"
                - "--connector=nixl"
              ports:
                - containerPort: 8000
                  protocol: TCP
          containers:
            - name: vllm
              image: {{ include "modelservice.vllmImage" . }}
              imagePullPolicy: {{ .Values.modelservice.vllm.image.imagePullPolicy }}
              securityContext:
                allowPrivilegeEscalation: false
              command:
                - vllm
                - serve
                - {{ `{{ default (print "/models/" .ModelPath) .HFModelName }}` }}
              args:
                - "--port"
                - "8001"
                - "--kv-transfer-config"
                - '{"kv_connector":"NixlConnector","kv_role":"kv_both"}'
                - "--enforce-eager"
              env:
                - name: HOME
                  value: /home
                - name: VLLM_NIXL_SIDE_CHANNEL_PORT
                  value: "5557"
                - name: VLLM_NIXL_SIDE_CHANNEL_HOST
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: VLLM_LOGGING_LEVEL
                  value: DEBUG
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: LMCACHE_DISTRIBUTED_URL
                  value: {{ `"${POD_IP}:80"` }}
                - name: CUDA_VISIBLE_DEVICES
                  value: "0"
                - name: UCX_TLS
                  value: "cuda_ipc,cuda_copy,tcp"
                {{- if .Values.redis.enabled }}
                - name: LMCACHE_LOOKUP_URL
                  value: {{ include "redis.master.service.fullurl" .}}
                {{- end }}
                {{ `{{- if .HFModelName }}` }}
                - name: HF_HUB_CACHE
                  value: /models
                {{ `{{- end }}` }}
              volumeMounts:
                - name: home
                  mountPath: /home
                {{ `{{- if .HFModelName }}` }}
                - name: model-cache
                  mountPath: /models
                {{ `{{- else }}` }}
                - name: model-storage
                  mountPath: /models
                  readOnly: true
                {{ `{{- end }}` }}
              ports:
                - containerPort: 5557
                  protocol: TCP
          volumes:
            - name: home
              emptyDir: {}
            {{ `{{- if .HFModelName }}` }}
            - name: model-cache
              emptyDir: {}
            {{ `{{- end }}` }}

  prefillDeployment: |
    apiVersion: apps/v1
    kind: Deployment
    spec:
      template:
        spec:
          {{- if .Values.modelservice.prefill.tolerations }}
          tolerations:
            {{- toYaml .Values.modelservice.prefill.tolerations | nindent 12 }}
          {{- end }}
          initContainers:
            - name: "routing-proxy"
              image: {{ include "modelservice.routingProxyImage" . }}
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
              args:
                - "--port=8000"
                - "--vllm-port=8001"
                - "--connector=nixl"
              ports:
                - containerPort: 8000
                  protocol: TCP
          containers:
            - name: vllm
              image: {{ include "modelservice.vllmImage" . }}
              imagePullPolicy: {{ .Values.modelservice.vllm.image.imagePullPolicy }}
              securityContext:
                allowPrivilegeEscalation: false
              command:
                - vllm
                - serve
                - {{ `{{ default (print "/models/" .ModelPath) .HFModelName }}` }}
              args:
                - "--port"
                - "8001"
                - "--kv-transfer-config"
                - '{"kv_connector":"NixlConnector","kv_role":"kv_both"}'
                - "--enforce-eager"
              env:
                - name: HOME
                  value: /home
                - name: VLLM_LOGGING_LEVEL
                  value: DEBUG
                - name: VLLM_NIXL_SIDE_CHANNEL_PORT
                  value: "5557"
                - name: VLLM_NIXL_SIDE_CHANNEL_HOST
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: LMCACHE_DISTRIBUTED_URL
                  value: {{ `"${POD_IP}:80"` }}
                - name: CUDA_VISIBLE_DEVICES
                  value: "0"
                - name: UCX_TLS
                  value: "cuda_ipc,cuda_copy,tcp"
                {{- if .Values.redis.enabled }}
                - name: LMCACHE_LOOKUP_URL
                  value: {{ include "redis.master.service.fullurl" .}}
                {{- end }}
                {{ `{{- if .HFModelName }}` }}
                - name: HF_HUB_CACHE
                  value: /models
                {{ `{{- end }}` }}
              volumeMounts:
                - name: home
                  mountPath: /home
                {{ `{{- if .HFModelName }}` }}
                - name: model-cache
                  mountPath: /models
                {{ `{{- else }}` }}
                - name: model-storage
                  mountPath: /models
                  readOnly: true
                {{ `{{- end }}` }}
              ports:
                - containerPort: 5557
                  protocol: TCP
          volumes:
            - name: home
              emptyDir: {}
            {{ `{{ if .HFModelName }}` }}
            - name: model-cache
              emptyDir: {}
            {{ `{{ end }}` }}

  decodeService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        {{- if .Values.modelservice.vllm.metrics.enabled }}
        {{ include "metrics.label" . }}
        {{- end }}
    spec:
      clusterIP: None
      ports:
      - name: nixl
        port: 5557
        protocol: TCP
      - name: vllm
        port: 8000
        protocol: TCP

  prefillService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        {{- if .Values.modelservice.vllm.metrics.enabled }}
        {{ include "metrics.label" . }}
        {{- end }}
    spec:
      clusterIP: None
      ports:
      - name: nixl
        port: 5557
        protocol: TCP
      - name: vllm
        port: 8000
        protocol: TCP

  eppService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/gateway: {{ include "gateway.fullname" . }}
        {{- if .Values.modelservice.epp.metrics.enabled }}
        {{ include "metrics.label" . }}
        {{- end}}
    spec:
      ports:
        - port: 9002
          protocol: TCP
          name: grpc
        - port: 9003
          protocol: TCP
          name: grpc-health
        - port: 9090
          protocol: TCP
          name: metrics
      type: NodePort
      selector:
        app.kubernetes.io/gateway: {{ include "gateway.fullname" . }}

  eppDeployment: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/gateway: {{ include "gateway.fullname" . }}
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/gateway: {{ include "gateway.fullname" . }}
      template:
        metadata:
          labels:
            app.kubernetes.io/gateway: {{ include "gateway.fullname" . }}
        spec:
          containers:
            - args:
                - --poolName
                - {{`"{{ .InferencePoolName }}"`}}
                - --poolNamespace
                - {{`"{{ .ModelServiceNamespace }}"`}}
                - -v
                - "4"
                - --zap-encoder
                - json
                - --grpcPort
                - "9002"
                - --grpcHealthPort
                - "9003"
              env:
              - name: PD_ENABLED
                value: "true"
              - name: PD_PROMPT_LEN_THRESHOLD
                value: "10"
              {{- if .Values.redis.enabled }}
              - name: KVCACHE_INDEXER_REDIS_ADDR
                value: {{ include "redis.master.service.fullurl" . -}}
              {{- end -}}
              {{/* HACK, waiting on: https://github.com/neuralmagic/llm-d-model-service/issues/123 */}}
              {{ `{{- if .HFModelName }}` }}
              - name: HF_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.sampleApplication.model.auth.hfToken.name }}
                    key: {{ .Values.sampleApplication.model.auth.hfToken.key }}
              {{ `{{- end }}` }}
              {{- if .Values.modelservice.epp.defaultEnvVars }}
              {{- include "common.tplvalues.render" ( dict "value" .Values.modelservice.epp.defaultEnvVars "context" $) | nindent 14 }}
              {{- end }}
              {{- if .Values.modelservice.epp.extraEnvVars }}
              {{- include "common.tplvalues.render" ( dict "value" .Values.modelservice.epp.extraEnvVars "context" $) | nindent 14 }}
              {{- end }}
              image: {{ include "modelservice.eppImage" . }}
              imagePullPolicy: {{ .Values.modelservice.epp.image.imagePullPolicy }}
              livenessProbe:
                failureThreshold: 3
                grpc:
                  port: 9003
                  service: "envoy.service.ext_proc.v3.ExternalProcessor"
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                failureThreshold: 3
                grpc:
                  port: 9003
                  service: "envoy.service.ext_proc.v3.ExternalProcessor"
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: epp
              ports:
                - name: grpc
                  containerPort: 9002
                  protocol: TCP
                - name: grpc-health
                  containerPort: 9003
                  protocol: TCP
                - name: metrics
                  containerPort: 9090
                  protocol: TCP

  inferencePool: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferencePool
    spec:
      targetPortNumber: 8000

  inferenceModel: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferenceModel
